/**
 * @param {FileState} state
 * @param {Identifier | NumericLiteral | StringLiteral} name
 * @param {Node} parent
 * @param {Options | null | undefined} [options]
 *   Configuration.
 * @returns {Name}
 */
export function createNameFields(state: FileState, name: typescript.Identifier | typescript.NumericLiteral | typescript.StringLiteral, parent: typescript.Node, options?: Options | null | undefined): Name;
/**
 *
 * @param {Identifier | NumericLiteral | StringLiteral} name
 * @returns {string}
 */
export function nameToString(name: typescript.Identifier | typescript.NumericLiteral | typescript.StringLiteral): string;
/**
 * Configuration.
 */
export type Options = {
    /**
     * Omit the signature.
     */
    omitSignature?: boolean | null | undefined;
    /**
     * Explicit class to use.
     */
    explicitClassName?: typescript.Identifier | null | undefined;
    /**
     * Explicit self name to use.
     */
    explicitSelfName?: typescript.Identifier | null | undefined;
};
import type { FileState } from '../types.js';
import typescript from 'typescript';
import type { Name } from 'module-exports';
//# sourceMappingURL=create-name-fields.d.ts.map